name: ReleaseWorkflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy-pages:
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: npm install, build
        run: |
          npm ci
          npm run build:pages
          ls
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build

  generate-axios-src:
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: npm install, generate
        run: |
          npm ci
          npm run generate:axios
      - name: Upload for generate-axios-src
        uses: actions/upload-artifact@v2
        with:
          name: generate-src
          path: ./typescript-axios-src

  npm-axios-publish:
    runs-on: ubuntu-20.04
    needs: generate-axios-src
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Download for generate-axios-src
        uses: actions/download-artifact@v2
        with:
          name: generate-src
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          # scope: '@xxxxx'
      - run: npm install
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  slack-notify:
    needs: [deploy-pages, generate-axios-src, npm-axios-publish]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: echo slack-notify
      # - name: Slack Notification
      #   uses: Gamesight/slack-workflow-status@master
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
 